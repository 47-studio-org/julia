version: build-{build}.{branch}
image: Visual Studio 2017

environment:
  matrix:
    - version: 1.4-rc
      variant: windowsservercore-1809
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - version: 1.4-rc
      variant: windowsservercore-ltsc2016
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - version: 1.3
      variant: windowsservercore-1809
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - version: 1.3
      variant: windowsservercore-ltsc2016
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - version: 1.0
      variant: windowsservercore-1809
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - version: 1.0
      variant: windowsservercore-ltsc2016
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

install:
  - ps: |
      [Environment]::SetEnvironmentVariable('dockerImage', ('julia:{0}' -f $env:variant), [EnvironmentVariableTarget]::Process);
      [Environment]::SetEnvironmentVariable('buildDirectory', ('{0}/windows/{1}' -f $env:version, $env:variant), [EnvironmentVariableTarget]::Process);

build_script:
  - cmd: appveyor-retry docker build --pull -t %dockerImage% %buildDirectory%

after_build:
  - ps: docker images

test_script:
  - cmd: docker run --rm %dockerImage% julia --version
# https://github.com/docker-library/official-images/blob/1f45da385fb37c7469edbcf519327db0e5fb7aab/test/tests/julia-hello-world/container.jl
  - cmd: docker run --rm %dockerImage% julia --eval "println("""Hello World!""")"
  - cmd: docker run --rm %dockerImage% julia --eval "download("""https://google.com""")"
  - cmd: docker run --rm %dockerImage% julia --eval "using Pkg; Pkg.add("""JSON""")"
